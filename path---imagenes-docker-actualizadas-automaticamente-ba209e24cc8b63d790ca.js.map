{"version":3,"sources":["webpack:///path---imagenes-docker-actualizadas-automaticamente-ba209e24cc8b63d790ca.js","webpack:///./.cache/json/imagenes-docker-actualizadas-automaticamente.json"],"names":["webpackJsonp","403","module","exports","data","site","siteMetadata","title","subtitle","copyright","author","name","twitter","disqusShortname","url","markdownRemark","id","html","frontmatter","date","description","pathContext","slug"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,yBAAAC,SAAA,mEAAAC,UAAA,oCAAAC,QAAyKC,KAAA,iBAAAC,QAAA,WAA4CC,gBAAA,UAAAC,IAAA,8BAAgEC,gBAAmBC,GAAA,wJAAAC,KAAA,uhFAA+qEC,aAA2iBX,MAAA,6DAAAY,KAAA,aAAAC,YAAA,6eAAmlBC,aAAgBC,KAAA","file":"path---imagenes-docker-actualizadas-automaticamente-ba209e24cc8b63d790ca.js","sourcesContent":["webpackJsonp([7747617219298],{\n\n/***/ 403:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog de David A. Lareo\",\"subtitle\":\"Sitio web personal: artículos, proyectos y material de autobombo\",\"copyright\":\"GNU Affero General Public License\",\"author\":{\"name\":\"David A. Lareo\",\"twitter\":\"dalareo\"},\"disqusShortname\":\"dalareo\",\"url\":\"https://dalareo.github.io\"}},\"markdownRemark\":{\"id\":\"/home/usuario/Software/dalareo.github.io/src/pages/articles/2017-01-27-crear-imagenes-docker-actualizadas/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Recientemente he creado una imagen de <a href=\\\"https://wordpress.org/\\\">Wordpress</a>\\npersonalizada para <a href=\\\"http://educaas.io\\\">EduCaaS</a>. Esta imagen incorpora la\\nposibilidad de instalar plugins que nos permitan integrar nuestro directorio de\\nusuarios con un servidor LDAP, lo cual es muy útil cuando queremos tener una\\ngestión integrada de nuestros usuarios para diversas aplicaciones, con un\\ncontrol granular de los permisos y características de cada usuario.</p>\\n<p>El problema no está en personalizar la imagen original, lo cual se puede hacer\\nvisitando el repositorio oficial, <a href=\\\"https://github.com/docker-library/wordpress\\\">https://github.com/docker-library/wordpress</a>,\\nen el que incluso he hecho una pull request para integrar el cambio. Allí\\nsimplemente editando el Dockerfile original, modificando el aprovisionamiento\\ndel servidor PHP y añadiendo las librerías necesarias para conectar con el\\nservidor LDAP… asunto resuelto. Pero ahora tendremos una imagen personalizada\\nde Wordpress que habrá que actualizar cada vez que salga una nueva versión\\nde Wordpress. No es un infierno. Pero lo puede ser si, como en EduCaaS,\\ngestionas un catálogo de decenas de aplicaciones que cada usuario puede instalar en su\\nespacio privado.</p>\\n<p>Por recomendación de Tianon Gravi, uno de los que mantienen el proyecto oficial\\ncreé <a href=\\\"https://github.com/dalareo/docker-wordpress-ldap-support\\\">otro repositorio</a>\\nconectado al registro de Docker mediante la función que ellos denominan\\n<a href=\\\"https://docs.docker.com/docker-hub/builds/\\\">automatic build</a>, con el siguiente\\ncódigo en el archivo Dockerfile:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">FROM wordpress\\n\\nRUN set -x \\\\\\n\\t&amp;&amp; apt-get update \\\\\\n\\t&amp;&amp; apt-get install -y libldap2-dev \\\\\\n\\t&amp;&amp; rm -rf /var/lib/apt/lists/* \\\\\\n\\t&amp;&amp; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\\\\n\\t&amp;&amp; docker-php-ext-install ldap \\\\\\n&amp;&amp; apt-get purge -y --auto-remove libldap2-dev</code></pre>\\n      </div>\\n<p>Además en la configuración del <strong>constructor automático</strong> indiqué una dependencia\\ncon la imagen original de Wordpress, por lo que una nueva versión de mi imagen\\nse ejecutará cada vez que el repositorio original se actualice.</p>\\n<p>De esta manera tengo una imagen personalizada que siempre se mantendrá\\nactualizada y que permitirá a los usuarios de <strong>EduCaaS</strong> tener las características\\navanzadas que proporciona la plataforma.</p>\",\"frontmatter\":{\"title\":\"Crear imágenes de Docker que se actualizan automáticamente\",\"date\":\"2017-01-31\",\"description\":\"Muchas veces construimos imágenes en Docker de nuestros proyectos favoritos para personalizarlas con alguna característica que nuetros usuarios o nuestros clientes necesitan. Sin embargo, esa personalización, como cualquier otro hackeo, puede convertirse en un impediemento para mantener la aplicación actualizada cuando el desarrollador publique nuevas versiones del proyecto original. Aquí explico como crear imágenes en Docker que se actualicen automáticamente con cada nueva versión.\"}}},\"pathContext\":{\"slug\":\"/imagenes-docker-actualizadas-automaticamente/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---imagenes-docker-actualizadas-automaticamente-ba209e24cc8b63d790ca.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Blog de David A. Lareo\",\"subtitle\":\"Sitio web personal: artículos, proyectos y material de autobombo\",\"copyright\":\"GNU Affero General Public License\",\"author\":{\"name\":\"David A. Lareo\",\"twitter\":\"dalareo\"},\"disqusShortname\":\"dalareo\",\"url\":\"https://dalareo.github.io\"}},\"markdownRemark\":{\"id\":\"/home/usuario/Software/dalareo.github.io/src/pages/articles/2017-01-27-crear-imagenes-docker-actualizadas/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p>Recientemente he creado una imagen de <a href=\\\"https://wordpress.org/\\\">Wordpress</a>\\npersonalizada para <a href=\\\"http://educaas.io\\\">EduCaaS</a>. Esta imagen incorpora la\\nposibilidad de instalar plugins que nos permitan integrar nuestro directorio de\\nusuarios con un servidor LDAP, lo cual es muy útil cuando queremos tener una\\ngestión integrada de nuestros usuarios para diversas aplicaciones, con un\\ncontrol granular de los permisos y características de cada usuario.</p>\\n<p>El problema no está en personalizar la imagen original, lo cual se puede hacer\\nvisitando el repositorio oficial, <a href=\\\"https://github.com/docker-library/wordpress\\\">https://github.com/docker-library/wordpress</a>,\\nen el que incluso he hecho una pull request para integrar el cambio. Allí\\nsimplemente editando el Dockerfile original, modificando el aprovisionamiento\\ndel servidor PHP y añadiendo las librerías necesarias para conectar con el\\nservidor LDAP… asunto resuelto. Pero ahora tendremos una imagen personalizada\\nde Wordpress que habrá que actualizar cada vez que salga una nueva versión\\nde Wordpress. No es un infierno. Pero lo puede ser si, como en EduCaaS,\\ngestionas un catálogo de decenas de aplicaciones que cada usuario puede instalar en su\\nespacio privado.</p>\\n<p>Por recomendación de Tianon Gravi, uno de los que mantienen el proyecto oficial\\ncreé <a href=\\\"https://github.com/dalareo/docker-wordpress-ldap-support\\\">otro repositorio</a>\\nconectado al registro de Docker mediante la función que ellos denominan\\n<a href=\\\"https://docs.docker.com/docker-hub/builds/\\\">automatic build</a>, con el siguiente\\ncódigo en el archivo Dockerfile:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">FROM wordpress\\n\\nRUN set -x \\\\\\n\\t&amp;&amp; apt-get update \\\\\\n\\t&amp;&amp; apt-get install -y libldap2-dev \\\\\\n\\t&amp;&amp; rm -rf /var/lib/apt/lists/* \\\\\\n\\t&amp;&amp; docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ \\\\\\n\\t&amp;&amp; docker-php-ext-install ldap \\\\\\n&amp;&amp; apt-get purge -y --auto-remove libldap2-dev</code></pre>\\n      </div>\\n<p>Además en la configuración del <strong>constructor automático</strong> indiqué una dependencia\\ncon la imagen original de Wordpress, por lo que una nueva versión de mi imagen\\nse ejecutará cada vez que el repositorio original se actualice.</p>\\n<p>De esta manera tengo una imagen personalizada que siempre se mantendrá\\nactualizada y que permitirá a los usuarios de <strong>EduCaaS</strong> tener las características\\navanzadas que proporciona la plataforma.</p>\",\"frontmatter\":{\"title\":\"Crear imágenes de Docker que se actualizan automáticamente\",\"date\":\"2017-01-31\",\"description\":\"Muchas veces construimos imágenes en Docker de nuestros proyectos favoritos para personalizarlas con alguna característica que nuetros usuarios o nuestros clientes necesitan. Sin embargo, esa personalización, como cualquier otro hackeo, puede convertirse en un impediemento para mantener la aplicación actualizada cuando el desarrollador publique nuevas versiones del proyecto original. Aquí explico como crear imágenes en Docker que se actualicen automáticamente con cada nueva versión.\"}}},\"pathContext\":{\"slug\":\"/imagenes-docker-actualizadas-automaticamente/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/imagenes-docker-actualizadas-automaticamente.json\n// module id = 403\n// module chunks = 7747617219298"],"sourceRoot":""}